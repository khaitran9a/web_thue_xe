@model Do_An_Nhom.Models.tblUser

@{
    ViewBag.Title = "Create";
}

<style>
    .SignUp {
        margin: auto;
        transform: translateY(150px);
        padding: 20px;
        border: 1px solid #333;
        z-index: 1000;
        height: fit-content;
    }

    .form-signup > h2 {
        color: #F33F3F;
    }

    .signup-row {
        align-items: center;
        justify-content: space-between;
    }

    .signup-row-title {
        padding: 0;
    }

    .signup-input:focus {
        border-color: #F33F3F;
        box-shadow: 0 0 0 0.2rem rgb(243 63 63 / 25%);
    }

    .signup-input::placeholder {
        font-size: 14px;
    }
</style>

<div class="SignUp col-md-8">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal form-signup">
        <h2>Đăng ký thành viên</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group d-flex signup-row">
            <div class="col-md-6">
                <label class="control-label col-md-5 signup-row-title">Tên đầy đủ</label>
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control signup-input", placeholder = "Nhập vào tên" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>


            <div class="col-md-6">
                <label class="control-label col-md-5 signup-row-title">Tên đăng nhập</label>
                @Html.EditorFor(model => model.Name_login, new { htmlAttributes = new { @class = "form-control signup-input", placeholder = "Nhập vào tên đăng nhập" } })
                @Html.ValidationMessageFor(model => model.Name_login, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control signup-input", placeholder = "Nhập vào tên email" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group d-flex signup-row">
            <div class="col-md-6">
                <label class="control-label col-md-5 signup-row-title">Mật khẩu</label>
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control signup-input", placeholder = "Nhập vào mật khẩu", type = "password" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-6">
                <label class="control-label col-md-5 signup-row-title">Xác nhận mật khẩu</label>
                <input placeholder="Nhập lại mật khẩu" , type="password" class="form-control signup-input" />
                @*@Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control signup-input", placeholder = "Nhập lại mật khẩu", type = "password"     } })*@
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-12">
                <label class="control-label col-md-5 signup-row-title">Số điện thoại</label>
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control signup-input", placeholder = "Nhập vào số điện thoại" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control signup-input", placeholder = "Nhập vào tên" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control signup-input", placeholder = "Nhập vào tên", Type = "date" } })
                @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group d-flex signup-row">
            @Html.ActionLink("Back to List", "Index")
            <div>
                <input type="submit" value="Đăng ký" class="btn btn-default" />

                @Html.ActionLink("Đăng nhập", "Index" , null, new { @class = "btn btn-default" })
            </div>
           
        </div>
    </div>
    }


</div>